/*
 * Copyright 2013 Patrick Kelchner
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *     
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.kelchner.surefire.result;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.JAXB;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import de.kelchner.surefire.result.TestCase;
import de.kelchner.surefire.result.adapters.PropertiesAdapter;

/**
 * Test-results as they are generated by
 * <a href=
 * "https://svn.apache.org/repos/asf/maven/surefire/trunk/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java"
 * >Maven Surefire</a>.
 * 
 * This class is sufficiently annotated to read and write the corresponding XML format via {@linkplain JAXB}.
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TestSuite", propOrder = {
		"failureCount",
		"errorCount",
		"skipCount",
		"testCount",
		"properties",
		"testElements"
})
@XmlRootElement(name = "testsuite")
public class TestSuite extends TestElement {
	@XmlAttribute(name = "tests", required = false)
	private Integer testCount;
	@XmlAttribute(name = "errors", required = false)
	private Integer errorCount;
	@XmlAttribute(name = "failures", required = false)
	private Integer failureCount;
	@XmlAttribute(name = "skipped", required = false)
	private Integer skipCount;

	@XmlJavaTypeAdapter(PropertiesAdapter.class)
	@XmlElement(name = "properties", required = false)
	private Map<String, String> properties;

	@XmlElements({
			@XmlElement(name = "testsuite", type = TestSuite.class),
			@XmlElement(name = "testcase", type = TestCase.class)
	})
	private List<TestElement> testElements;

	public Integer getTestCount() {
		return testCount;
	}

	public void setTestCount(Integer testCount) {
		this.testCount = testCount;
	}

	public Integer getErrorCount() {
		return errorCount;
	}

	public void setErrorCount(Integer errorCount) {
		this.errorCount = errorCount;
	}

	public Integer getFailureCount() {
		return failureCount;
	}

	public void setFailureCount(Integer failureCount) {
		this.failureCount = failureCount;
	}

	public Integer getSkipCount() {
		return skipCount;
	}

	public void setSkipCount(Integer skipCount) {
		this.skipCount = skipCount;
	}

	public Map<String, String> getProperties() {
		if (properties == null) {
			properties = new LinkedHashMap<String, String>();
		}
		return properties;
	}

	public List<TestElement> getTestElements() {
		if (testElements == null) {
			testElements = new ArrayList<TestElement>();
		}
		return testElements;
	}
}
